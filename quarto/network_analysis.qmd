---
title: "Southeast Texas Flood Governance"
subtitle: "A network analysis"
author: "Ethan Tenison"
format: html
server: shiny
---

```{r}
#| label: load-packages
#| message: false
#| warning: false

library(tidyverse)
library(janitor)
library(Hmisc)
library(visNetwork)
library(igraph)
library(MetBrewer)
library(shiny)
library(shinyWidgets)

knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```

```{r}
#for some reasont his needs to be hardcoded 
df <- readRDS("~/Desktop/Data_Projects/Texas_Flood_Governance/data/interim/survey_data.rds")
```

\
Drivers and Impact

Perceived drivers and impact of flooding.

```{r drivers}

drivers <- df |>
  select(
    response_id,
    name,
    starts_with("below_are_a_list_of_drivers"),
    starts_with("below_are_a_list_of_flood")
  ) |>
  #renaming for comprehensibility purposes
  rename_with(
    ~ gsub(
      'below_are_a_list_of_drivers_of_flood_risk_using_the_slider_tool_please_indicate_how_important_each_issue_below_is_to_you_your_organization_1_not_important_10_extremely_important',
      'drivers',
      .x
    )
  ) |> 
  rename_with(
    ~ gsub(
      'below_are_a_list_of_flood_impacts_using_the_slider_tool_please_indicate_how_important_each_issue_below_is_to_you_your_organization_1_not_important_10_extremely_important',
      'impacts',
      .x
    )
  )


```

There were two sets of questions referring to each

```{r drivers barplot}
driver_bar <- drivers |> 
  select(name, 3:7) |> 
  pivot_longer(cols = starts_with("drivers"),
               names_to = "driver",
               values_to = "value") |> 
  filter(!is.na(value)) |> 
  mutate(driver = gsub("drivers", "", driver),
         driver = gsub("_", " ", driver),
         driver = str_to_title(driver)) |> 
  group_by(driver) |> 
  dplyr::summarize(avg = mean(value, na.rm = TRUE), sd = sd(value, na.rm = TRUE))

driver_bar$driver[driver_bar$driver == " Geographic And Geophysical Factors Topography Proximity To Water Bodies"] <- "Geographic And Geophysical Factors\n Topography Proximity To Water Bodies"


theme_set(theme_classic())
 ggplot(driver_bar, aes( x = reorder(driver, avg), y = avg)) +
   geom_bar(stat = "identity", fill = "#007ba5") +
   scale_fill_manual(values=met.brewer("Egypt", 5)) +
   labs(title = "Perceived Drivers of Flooding Risk",
        subtitle = "(On a scale from 0-10)",
        x = "",
        y = ""
        ) +
    coord_flip() +
    geom_errorbar(aes(ymin=avg-sd,
                      ymax=avg+sd),
                  width = .2) 
```

```{r impacts}

impact_bar <- drivers |> 
  select(name, 10:13) |> 
  pivot_longer(cols = starts_with("impac"),
               names_to = "impact",
               values_to = "value") |> 
  filter(!is.na(value)) |> 
  mutate(impact = gsub("impacts", "", impact),
         impact = gsub("_", " ", impact),
         impact = str_to_title(impact)) |> 
  group_by(impact) |> 
  dplyr::summarize(avg = mean(value, na.rm = TRUE), sd = sd(value, na.rm = TRUE))

impact_bar$impact[impact_bar$impact == " Ecological  E G  To Beaches Rivers Habitat Trails"] <- "Ecological  E G  To\n Beaches Rivers Habitat Trails"

impact_bar$impact[impact_bar$impact == " Economic  Lost Revenue Costs Of Recovery"] <- "Economic  Lost Revenue\n Costs Of Recovery"

impact_bar$impact[impact_bar$impact == " Infrastructure  Telecommunication Energy Transportation"] <- "Infrastructure  Telecommunication\n Energy Transportation"

impact_bar$impact[impact_bar$impact == " Social  Population Displacement Health Social Inequalities"] <- "Social  Population Displacement\n Health Social Inequalities"

theme_set(theme_classic())
 ggplot(impact_bar, aes(reorder(impact, avg), avg)) +
   geom_bar(stat = "identity", fill = "#00b67e") +
   scale_fill_manual(values=met.brewer("Egypt", 5)) +
   labs(title = "Perceived Issue Importance",
        subtitle = "(On a scale from 0-10)",
        x = "",
        y = ""
        ) +
   coord_flip() +
   geom_errorbar(aes(ymin=avg-sd,
                     ymax=avg+sd),
                 width = .2)

```

# Collaboration

```{r collab}

collab <- df |> 
  select(
    response_id,
    name,
    org_type1,
    starts_with("section_2"),
    starts_with("continued_information")
  ) |> 
   rename_with(
    ~ gsub(
      'section_2_information_sharing_and_collaboration_networks_across_the_southeast_texas_below_you_will_see_a_list_of_texas_state_and_federal_agencies_that_work_within_and_across_the_southeast_texas_geography_of_interest_considering_the_past_2_years_whom_you_go_to_flood_related_meetings_virtually_or_in_person_receive_or_share_advice_or_information_or_implement_projects_within_or_across_the_southeast_texas_region_select_all_that_apply',
      'collab',
      .x
    )
  ) |> 
  rename_with(
    ~ gsub(
      'continued_information_sharing_and_collaboration_networks_across_the_southeast_texas_below_you_will_see_a_list_of_agencies_and_organizations_that_dont_have_a_defined_jurisdiction_in_the_southeast_texas_but_may_be_a_part_of_your_network_among_the_list_below_please_consider_within_the_past_2_years_whom_you_go_to_flood_related_meetings_receive_or_share_advice_or_information_or_implement_projects_within_or_across_the_southeast_texas_select_all_that_apply',
      'collab',
      .x
    )
  ) |> 
  rename_with(
    ~ gsub(
      'continued_information_sharing_and_collaboration_networks_across_the_southeast_texas_please_list_additional_organizations_groups_below_group_number',
      'other_orgs',
      .x
    )
  ) |> 
  rename(addition_orgs = "continued_information_sharing_and_collaboration_networks_across_the_southeast_texas_can_you_think_of_other_agencies_or_organizations_not_listed_previously_with_whom_your_organization_goes_to_meetings_receives_or_shares_advice_or_information_or_implements_projects_within_or_across_the_southeast_texas_region")

```

### Collab Edges and Nodes

```{r collab_edges}

#First create a long dataframe with organizations and their partners
collab_edges <- collab |>
  select(name, starts_with("collab")) |>
  pivot_longer(cols = starts_with("collab"),
               names_to = "organization",
               values_to = "partner") |> 
  filter(!is.na(partner)) |> 
  mutate(organization = gsub("partner", "", organization),
         organization = gsub("_", " ", organization),
         organization = gsub("collab", "", organization),
         organization = str_to_title(organization)) |> 
  select(-partner)

node_type <- collab |> 
  select(name, org_type1)

g <- graph_from_data_frame(d=collab_edges,directed=TRUE) 
degrees <-as.data.frame(igraph::degree(g)) |> 
  rename("value" = 1) |>
  rownames_to_column(var = "ego")

gvis <- toVisNetworkData(g)

met_pallete_org <- MetBrewer::met.brewer(name="Isfahan2",n=8)
met_pallete_org <- as.character(met_pallete_org)

nodes <- gvis$nodes
nodes <- nodes |> 
  left_join(degrees, by = c("id" = "ego") ) |> 
  left_join(node_type, by = c("id" = "name")) |> 
  mutate(color = case_when(
    org_type1 == "Nonprofit" ~ "#D7ACA1",
    org_type1 == "Academia" ~ "#DAB745",
    org_type1 == "County" ~ "#CEBD09",
    org_type1 == "State" ~ "#95B22E",
    org_type1 == "Federal" ~ "#65AF66",
    org_type1 == "Municipal" ~ "#3DB4B2",
    org_type1 == "Other" ~ "#4063A3",
    is.na(org_type1) ~ "#3992B7"
  ))

nodes <- nodes |> 
  select(everything(), -org_type1)

edges <- gvis$edges

lnodes <- data.frame(label = c("Nonprofit", "Academia", "County", "State",
                               "Federal", "Municipal", "Other", "N/A"),
                     shape = c( "ellipse"),
                     color = c("#D7ACA1", "#DAB745","#CEBD09","#95B22E",
                               "#65AF66","#3DB4B2","#4063A3", "#3992B7"  ),
                     title = "Type", id = 1:8)

```

### Collab Network

```{r collab_network}

collab_network <-
  visNetwork(
    nodes,
    edges,
    main = "Southeast Texas Flood Governance",
    width = "100%",
    height = "850px"
  ) |>
  visEdges(
    smooth = T,
    arrows = list(
      to = list(enabled = TRUE, scaleFactor = .5),
      width = 3
    ),
    color = list(highlight = "black")
  ) |> 
  visNodes(color = list(
    background = "white",
    border = "black",
    highlight = list(background = "#A9A9A9", border = "black"),
    hover = list(background = "#A9A9A9", border = "black")
  )) |>
  visPhysics(stabilization = FALSE)  |> 
  visIgraphLayout(
    smooth = FALSE,
    physics = FALSE,
    randomSeed = 27
  ) |>
  visInteraction(navigationButtons = TRUE) |> 
  visLegend(addNodes = lnodes, useGroups = FALSE)


collab_network

```

# Who do you work with?

-   Separated into "respond recover or rebuild" and prepare

```{r section3}
rrr <- df |> 
  select(
    name,
    org_type1,
    starts_with("who_do_you_work_with_to_respond")
  ) |> 
  rename_with(
    ~ gsub(
      'who_do_you_work_with_to_respond_recover_or_rebuild_the_following_impacts_of_flooding_of_importance_to_you_your_organization_',
      '',
      .x
    )
  ) 
write.csv(rrr, file = "data/processed/rrr.csv", row.names = FALSE)

pre <- df |> 
  select(
    name,
    org_type1,
    starts_with("who_do_you_work_with_to_prepare")
  ) |> 
  rename_with(
    ~ gsub(
      'who_do_you_work_with_to_prepare_for_and_mitigate_the_following_drivers_of_flooding_of_importance_to_you_your_organization',
      '',
      .x
    )
  )

write.csv(rrr, file = "data/processed/prepare.csv", row.names = FALSE)

```

### Respond

```{r respond_dataprep}
#| context: setup

library(tidyverse)

lnodes <- data.frame(label = c("Nonprofit", "Academia", "County", "State",
                               "Federal", "Municipal", "Other", "N/A"),
                     shape = c( "ellipse"),
                     color = c("#D7ACA1", "#DAB745","#CEBD09","#95B22E",
                               "#65AF66","#3DB4B2","#4063A3", "#3992B7"  ),
                     title = "Type", id = 1:8)

#Going from wide to long
rrr2 <- read_csv("/Users/et/Desktop/Data_Projects/Texas_Flood_Governance/data/processed/rrr.csv") |>
  #the index numbers have to be changed for different surveys
  pivot_longer(cols = 3:314,
               names_to = "organization",
               values_to = "rrr") |>
  filter(!is.na(rrr)) |> 
  mutate(organization = gsub("_social_impacts", "", organization),
         organization = gsub("_infrastructure_impacts", "", organization),
         organization = gsub("_ecological_impacts", "", organization),
         organization = gsub("_economic_impacts", "", organization),
         organization = gsub("_other_number_1", "", organization),
         organization = gsub("_", " ", organization),
         organization = str_to_title(organization)
         )



```

```{r}
pickerInput(
  "respond",
  label = strong("Pick"),
  choices = c(
    "Social impacts",
    "Economic impacts",
    "Infrastructure impacts",
    "Ecological impacts",
    "Other #1"
  ),
  multiple  = FALSE,
  selected = "Social impacts",
  width = "50%"
)
visNetworkOutput("respond_network", height = "700px")

```

```{r}
#| context: server

library(visNetwork)
library(tidyverse)
library(igraph)

output$respond_network <- visNetwork::renderVisNetwork({
  
  edges <- rrr2 |>
  filter(rrr == input$respond) |> 
  dplyr::select(name, organization, org_type1)

node_type <- rrr2 |> 
  select(name, org_type1)

g <- graph_from_data_frame(d=edges,directed=TRUE) 
degrees <-as.data.frame(igraph::degree(g)) |> 
  rename("value" = 1) |>
  rownames_to_column(var = "ego")

gvis <- toVisNetworkData(g)

met_pallete_org <- MetBrewer::met.brewer(name="Isfahan2",n=8)
met_pallete_org <- as.character(met_pallete_org)

nodes <- gvis$nodes
nodes <- nodes |> 
  left_join(degrees, by = c("id" = "ego") ) |> 
  left_join(node_type, by = c("id" = "name")) |> 
  mutate(color = case_when(
    org_type1 == "Nonprofit" ~ "#D7ACA1",
    org_type1 == "Academia" ~ "#DAB745",
    org_type1 == "County" ~ "#CEBD09",
    org_type1 == "State" ~ "#95B22E",
    org_type1 == "Federal" ~ "#65AF66",
    org_type1 == "Municipal" ~ "#3DB4B2",
    org_type1 == "Other" ~ "#4063A3",
    is.na(org_type1) ~ "#3992B7"
  )) |> 
  distinct()

nodes <- nodes |> 
  select(everything(), -org_type1)

edges <- gvis$edges

network <-
  visNetwork(
    nodes,
    edges,
    main = "Social Impacts",
    width = "100%",
    height = "850px"
  ) |>
  visEdges(
    smooth = T,
    arrows = list(
      to = list(enabled = TRUE, scaleFactor = .5),
      width = 3
    ),
    color = list(highlight = "black")
  ) |> 
  visNodes(color = list(
    background = "white",
    border = "black",
    highlight = list(background = "#A9A9A9", border = "black"),
    hover = list(background = "#A9A9A9", border = "black")
  )) |>
  visPhysics(stabilization = FALSE)  |> 
  visIgraphLayout(
    smooth = FALSE,
    physics = FALSE,
    randomSeed = 27
  ) |>
  visInteraction(navigationButtons = TRUE) |> 
  visLegend(addNodes = lnodes, useGroups = FALSE)


network
  
})

```

```{r respond_network}


```

### Prepare

```{r prepare}
#| context: setup
library(tidyverse)

pre2 <- read_csv("/Users/et/Desktop/Data_Projects/Texas_Flood_Governance/data/processed/prepare.csv") |>
  #the index numbers have to be changed for different surveys
  pivot_longer(cols = 3:314,
               names_to = "organization",
               values_to = "pre") |>
  filter(!is.na(pre)) |> 
  mutate(organization = gsub("_changing_precipitation_and_weather_patterns", "", organization),
         organization = gsub("_geographic_and_geophysical_factors", "", organization),
         organization = gsub("_physical_roads_and_drainage_infrastructure", "", organization),
         organization = gsub("_population_growth_and_distribution_of_people", "", organization),
         organization = gsub("_socio_economic_factors_and_local_economy", "", organization),
         organization = gsub("_other", "", organization),
         organization = gsub("_", " ", organization),
         organization = str_to_title(organization)
         )
```

```{r}
pickerInput(
  "prepare",
  label = strong("Pick"),
  choices = c(
    "Social impacts",
    "Economic impacts",
    "Infrastructure impacts",
    "Ecological impacts",
    "Other #1"
  ),
  multiple  = FALSE,
  selected = "Social impacts",
  width = "50%"
)
visNetworkOutput("prepare_network", height = "700px")

```

```{r}
#| context: server
library(visNetwork)
library(tidyverse)
library(igraph)

output$prepare_network <- visNetwork::renderVisNetwork({
  
  edges <- pre2 |>
  filter(pre == input$prepare) |> 
  dplyr::select(name, organization, org_type1)

node_type <- pre2 |> 
  select(name, org_type1)

g <- graph_from_data_frame(d=edges,directed=TRUE) 
degrees <-as.data.frame(igraph::degree(g)) |> 
  rename("value" = 1) |>
  rownames_to_column(var = "ego")

gvis <- toVisNetworkData(g)

met_pallete_org <- MetBrewer::met.brewer(name="Isfahan2",n=8)
met_pallete_org <- as.character(met_pallete_org)

nodes <- gvis$nodes
nodes <- nodes |> 
  left_join(degrees, by = c("id" = "ego") ) |> 
  left_join(node_type, by = c("id" = "name")) |> 
  mutate(color = case_when(
    org_type1 == "Nonprofit" ~ "#D7ACA1",
    org_type1 == "Academia" ~ "#DAB745",
    org_type1 == "County" ~ "#CEBD09",
    org_type1 == "State" ~ "#95B22E",
    org_type1 == "Federal" ~ "#65AF66",
    org_type1 == "Municipal" ~ "#3DB4B2",
    org_type1 == "Other" ~ "#4063A3",
    is.na(org_type1) ~ "#3992B7"
  )) |> 
  distinct()

nodes <- nodes |> 
  select(everything(), -org_type1)

edges <- gvis$edges

network <-
  visNetwork(
    nodes,
    edges,
    main = "Social Impacts",
    width = "100%",
    height = "850px"
  ) |>
  visEdges(
    smooth = T,
    arrows = list(
      to = list(enabled = TRUE, scaleFactor = .5),
      width = 3
    ),
    color = list(highlight = "black")
  ) |> 
  visNodes(color = list(
    background = "white",
    border = "black",
    highlight = list(background = "#A9A9A9", border = "black"),
    hover = list(background = "#A9A9A9", border = "black")
  )) |>
  visPhysics(stabilization = FALSE)  |> 
  visIgraphLayout(
    smooth = FALSE,
    physics = FALSE,
    randomSeed = 27
  ) |>
  visInteraction(navigationButtons = TRUE) |> 
  visLegend(addNodes = lnodes, useGroups = FALSE)


network
})
```

# Quality of Relations

```{r information}

info <- df |> 
  select(
    name,
    starts_with("generally_speaking")
  ) |> 
  rename_with(
    ~ gsub(
      'generally_speaking_the_information_provided_by_the_following_organizations_is_',
      '',
      .x
    )
  ) 

con <- df |> 
  select(
    name,
    starts_with("how_confident_are_you")
  ) |> 
  rename_with(
    ~ gsub(
      'how_confident_are_you_in_this_organizations_capacity_to_minimize_the_impacts_of_',
      '',
      .x
    )
  )

```

### Information

```{r info}

info2 <- info |>
  #the index numbers have to be changed for different surveys
  pivot_longer(cols = 2:53,
               names_to = "organization",
               values_to = "info") |>
  filter(!is.na(info)) |> 
  mutate(organization = gsub("_", " ", organization),
         organization = str_to_title(organization))


```

### Confidence

```{r confidence}

con2 <- con |>
  #the index numbers have to be changed for different surveys
  pivot_longer(cols = 2:53,
               names_to = "organization",
               values_to = "con") |>
  filter(!is.na(con)) |> 
  mutate(organization = gsub("_", " ", organization),
         organization = str_to_title(organization))


```

### 

-   New dataframe matching new groups with their email address
